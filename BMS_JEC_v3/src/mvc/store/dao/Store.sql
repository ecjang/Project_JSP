--오라클을 설치하면 포트번호가 8080이므로 톰캣과 충돌함..
-- 따라서 오라클 포트번호를 9090으로 변경설정
-- SQL Developer의 SYSTEM 계정에서 변경

CONN SYSTEM/ Oracle;

EXEC dbms_xdb.setHttpPort(9090);
-- PL/SQL 프로시저가 성공적으로 완료되었습니다.

SELECT dbms_xdb.getHttpPort() FROM dual;
-- 9090


 DROP SEQUENCE board_seq;
 
 CREATE SEQUENCE mem_seq
 	START WITH 1 INCREMENT BY 1 MAXVALUE 99999;

 	
 DROP TABLE MEMBER CASCADE;
 
 CREATE TABLE MEMBER (
	M_NUM NUMBER NOT NULL, /* M_NUM */
	ID VARCHAR2(255) NOT NULL, /* ID */
	PW VARCHAR2(255) NOT NULL, /* PW */
	NAME VARCHAR2(255) NOT NULL, /* NAME */
	JUMIN VARCHAR2(255), /* JUMIN */
	HP VARCHAR2(30) NOT NULL, /* HP */
	EMAIL VARCHAR2(255), /* EMAIL */
	CLASS VARCHAR2(255) NOT NULL /* CLASS */
);






SELECT 'DROP TABLE ' || OBJECT_NAME || ' CASCADE CONSTRAINTS;'
FROM USER_OBJECTS
WHERE OBJECT_TYPE='TABLE';

DROP TABLE BOOK CASCADE CONSTRAINTS;
DROP TABLE BORDER CASCADE CONSTRAINTS;
DROP TABLE PAY CASCADE CONSTRAINTS;
DROP TABLE RETRUN CASCADE CONSTRAINTS;
DROP TABLE REFUND CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE DELIVERY CASCADE CONSTRAINTS;
DROP TABLE ADMIN CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE CART CASCADE CONSTRAINTS;
DROP TABLE SEARCH CASCADE CONSTRAINTS;
DROP TABLE NEWBOOK CASCADE CONSTRAINTS;
DROP TABLE REPLY CASCADE CONSTRAINTS;
DROP TABLE BOOKS CASCADE CONSTRAINTS;


CONN SYSTEM/ Oracle;

EXEC dbms_xdb.setHttpPort(9090);
-- PL/SQL 프로시저가 성공적으로 완료되었습니다.

SELECT dbms_xdb.getHttpPort() FROM dual;
-- 9090

SELECT 'DROP TABLE ' || OBJECT_NAME || ' CASCADE CONSTRAINTS;'
FROM USER_OBJECTS
WHERE OBJECT_TYPE='TABLE';


DROP TABLE NEWBOOK CASCADE CONSTRAINTS;
DROP TABLE SEARCH CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE DELIVERY CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE BOOK CASCADE CONSTRAINTS;



 DROP SEQUENCE mem_seq;
 
 CREATE SEQUENCE mem_seq
 	START WITH 1 INCREMENT BY 1 MAXVALUE 99999;


CREATE TABLE MEMBER (
	M_NUM NUMBER NOT NULL PRIMARY KEY, 
	ID VARCHAR2(255) NOT NULL, 
	PW VARCHAR2(255) NOT NULL, 
	NAME VARCHAR2(255) NOT NULL, 
	JUMIN1 NUMBER, 
  	JUMIN2 NUMBER, 
	HP VARCHAR2(30) NOT NULL,
	EMAIL VARCHAR2(255), 
  	REG_DATE TIMESTAMP NOT NULL,
	KIND VARCHAR2(255) NOT NULL 
);

SELECT * FROM MEMBER order by m_num;



DROP TABLE BOOK;

CREATE TABLE BOOK (
	B_NUM NUMBER NOT NULL PRIMARY KEY,
	M_NUM NUMBER NOT NULL , 
	TITLE VARCHAR2(255) NOT NULL, 
	SUBTITLE VARCHAR2(4000) NOT NULL,
	AUTHOR VARCHAR2(255) NOT NULL,
	QUAN NUMBER NOT NULL, 
	PRICE NUMBER NOT NULL, 
	REG_DATE DATE NOT NULL, 
	KIND VARCHAR2(255) NOT NULL,
	STATE VARCHAR2(255) NOT NULL,
	
	CONSTRAINT FK_M_NUM_MEMBER FOREIGN KEY (M_NUM)
	REFERENCES MEMBER(M_NUM)
);

B_NUM
M_NUM
TITLE
SUBTITLE
AUTHOR
QUAN
PRICE
PUBLISH
REG_DATE
STATE





ALTER TABLE BOOK DROP COLUMN PUBLISH;


 DROP SEQUENCE BOOK_SEQ;
 
 CREATE SEQUENCE BOOK_SEQ
 	START WITH 1 INCREMENT BY 1 MAXVALUE 99999;

 	
INSERT INTO BOOK (B_NUM, M_NUM, TITLE, AUTHOR, QUAN, PRICE, REG_DATE, KIND, STATE)
VALUES(BOOK_SEQ.NEXTVAL,1,'2','3',4,5,'2015/05/05','7','8');

select * from member order by m_num;
select * from book order by b_num DESC;



DROP SEQUENCE BOARD_SEQ;
 
CREATE SEQUENCE BOARD_SEQ
	START WITH 1 INCREMENT BY 1 MAXVALUE 99999;


drop table BOARD;

CREATE TABLE BOARD (
	M_NUM INTEGER NOT NULL, /* M_NUM */
	NO INTEGER NOT NULL, /* NO */
	TITLE VARCHAR2(255) NOT NULL, /* TITLE */
	WRITER VARCHAR2(255) NOT NULL, /* WRITER */
	CONTENT VARCHAR2(255) NOT NULL, /* CONTENT */
	REG_DATE DATE NOT NULL, /* REG_DATE */
	VIEWS INTEGER, /* VIEWS */
	REF INTEGER, /* REF */
	REF_STEP INTEGER, /* REF_STEP */
	REF_LEVEL INTEGER, /* REF_LEVLE */
	KIND VARCHAR2(255), /* B_KIND */
	IP VARCHAR2(15)
);



CREATE TABLE BOARD (
	M_NUM NUMBER NOT NULL,
	NO NUMBER PRIMARY KEY, 
	TITLE VARCHAR2(255) NOT NULL, 
	WRITER VARCHAR2(255) NOT NULL, 
	CONTENT VARCHAR2(255) NOT NULL, 
	REG_DATE TIMESTAMP NOT NULL, 
	VIEWS NUMBER, 
	REF NUMBER, 
	REF_STEP NUMBER, 
	REF_LEVEL NUMBER, 
	KIND VARCHAR2(255), 
	IP VARCHAR2(15)
);



ALTER TABLE BOARD
	ADD
		CONSTRAINT PK_BOARD
		PRIMARY KEY (
			M_NUM
		);

ALTER TABLE BOARD
	ADD
		CONSTRAINT FK_MEMBER_TO_BOARD
		FOREIGN KEY (
			M_NUM
		)
		REFERENCES MEMBER (
			M_NUM
		);


		
		
select * from board;



M_NUM 
NO 
TITLE 
WRITER 
CONTENT 
REG_DATE 
VIEWS 
REF 
REF_STEP 
REF_LEVLE
KIND 
       


UPDATE BOARD A SET A.KIND = EVENT WHERE ( SELECT B.KIND FROM BOARD B WHERE B.KIND IN ('EVNET') ) ;    
  


UPDATE BOARD SET KIND=EVENT WHERE KIND IN ('EVNET');




